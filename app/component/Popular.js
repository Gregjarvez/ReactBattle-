"use strict";import  React from 'react';import req from "../utils/api";const SelectLanguage = (props) => {    let {languages, onclick, selectedLanguage} = props.data;    let list = languages.map((language) => {        return (            <li                style={language === selectedLanguage() ?                    {color: "#19B5FE"} :                    {color: " #6C7A89"}                }                key={language}                onClick={(() => onclick(language))}            >                {language}            </li>        )    });    return (        <ul className="languages">            {list}        </ul>    );};const RepoItem = (props) => {    let data = props.profile;    return (        <li className="repo--lists">            <div className="repo--rank">{props.index + 1}</div>            <ul className="repo--lists-item">                <li>                    <img                        className="repo--avatar"                        src={data.owner.avatar_url}                        alt={`Avatar for ${data.owner.name}`}                    />                </li>                <li>                    <a                        className="repo--url"                        href={data.html_url}>                        {data.name}                    </a>                </li>                <li>@{data.owner.login}</li>                <li>{data.stargazers_count}</li>            </ul>        </li>    );};const Repositories = (props) => {    let list;    if (!props.repos) {        return (            <div className="loader">Loading...</div>        );    }    list = props.repos.map((repo, index) => {        return <RepoItem key={repo.name} profile={repo} index={index}/>    });    return (        <ul className="popular--repos">            {list}        </ul>    );}class Popular extends React.Component {    constructor(props) {        super(props);        this.state = {            selectedLanguage: "All",            repos: null        }        this.setActiveLink = this.setActiveLink.bind(this);        this.getSelectedLanguage = this.getSelectedLanguage.bind(this);    }    componentDidMount() {        this.setActiveLink(this.getSelectedLanguage())    }    getSelectedLanguage() {        return this.state.selectedLanguage;    }    setActiveLink(lang) {        req.fetchPopularRepos(lang)            .then((repositories) => {                this.setState({                    selectedLanguage: lang,                    repos: repositories                });            });    }    render() {        const languages = ["All", "Javascript", "Ruby", "Java", "Css", "Python"];        const data = {            languages: languages,            onclick: this.setActiveLink,            selectedLanguage: this.getSelectedLanguage        }        return (            <div>                <SelectLanguage data={data}/>                <Repositories repos={this.state.repos}/>            </div>        )    }}export default Popular;