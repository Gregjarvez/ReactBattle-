import React from "react"import queryString from "query-string";import api from "../utils/api";import * as ReactRouter from "react-router-dom";import Loader from "./loading";const Link = ReactRouter.Link;const Player = (props) => {        return (        <div className="panel">            <div className="panel--heading">{props.label}</div>            <div className="score">{props.score}</div>            <img className="repo--avatar" src={props.profile.avatar_url}/>            <div className="repo--login">@{props.profile.login}</div>            <ul className="info--container">                <li>{props.profile.name}</li>                <li>{props.profile.location}</li>                <li>Company: {props.profile.company}</li>                <li>Followers: {props.profile.followers}</li>                <Link                    className="repo--url"                    to={props.profile.html_url}                >                    {props.profile.html_url}                </Link>            </ul>        </div>    );}class Result extends React.Component {    constructor(props) {        super(props);        this.state = {            winner: null,            loser: null,            error: null,            loading: true        }    }    componentDidMount() {        const string = queryString.parse(this.props.location.search);        let {playerOneName, playerTwoName} = string;        api.battle([            playerOneName,            playerTwoName        ]).then((results) => {            if (results === false) {                this.setState(() => {                    return {                        error: `Looks like something went wrong, Make sure both user exist on github`,                        loading: false                    }                });            }            this.setState(() => {                const [winner, loser] = results;                return {                    winner: winner,                    loser: loser,                    error: null,                    loading: false                }            });        });    }    render() {        const {winner, loser, error, loading} = this.state;        console.log(winner, loser, error, loading);        if (loading) {            return (               <Loader />            )        }        if (error) {            return (                <div>                    <p className="loader">{error}</p>                    <Link to="/battle" className="button">Back</Link>                </div>            );        }        return (            <div>                <div className="panels">                    <Player                        label="Winner"                        score={winner.score}                        profile={winner.profile}                    />                    <Player                        label="Loser"                        score={loser.score}                        profile={loser.profile}                    />                </div>            </div>        );    }}export default Result;